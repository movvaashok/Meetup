{"ast":null,"code":"var _jsxFileName = \"/Users/mak/react-material-ui-examples-master/src/components/tutorial.component.js\";\nimport React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport { styles } from \"../css-common\";\nimport { TextField, Button, withStyles } from \"@material-ui/core\";\n\nclass Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getTutorial = this.getTutorial.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateTutorial = this.updateTutorial.bind(this);\n    this.deleteTutorial = this.deleteTutorial.bind(this);\n    this.state = {\n      currentTutorial: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getTutorial(this.props.match.params.id);\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: { ...prevState.currentTutorial,\n          title: title\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    this.setState(prevState => ({\n      currentTutorial: { ...prevState.currentTutorial,\n        description: description\n      }\n    }));\n  }\n\n  getTutorial(id) {\n    TutorialDataService.get(id).then(response => {\n      this.setState({\n        currentTutorial: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updatePublished(status) {\n    var data = {\n      id: this.state.currentTutorial.id,\n      title: this.state.currentTutorial.title,\n      description: this.state.currentTutorial.description,\n      published: status\n    };\n    TutorialDataService.update(this.state.currentTutorial.id, data).then(response => {\n      this.setState(prevState => ({\n        currentTutorial: { ...prevState.currentTutorial,\n          published: status\n        }\n      }));\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updateTutorial() {\n    TutorialDataService.update(this.state.currentTutorial.id, this.state.currentTutorial).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The tutorial was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  deleteTutorial() {\n    TutorialDataService.delete(this.state.currentTutorial.id).then(response => {\n      console.log(response.data);\n      this.props.history.push('/tutorials');\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const {\n      currentTutorial\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, currentTutorial ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, \"Tutorial\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Title\",\n      name: \"title\",\n      value: currentTutorial.title,\n      onChange: this.onChangeTitle,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Description\",\n      name: \"description\",\n      value: currentTutorial.description,\n      onChange: this.onChangeDescription,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, \"Status: \")), currentTutorial.published ? \"Published\" : \"Pending\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttonWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, currentTutorial.published ? /*#__PURE__*/React.createElement(Button, {\n      className: `${classes.publish} ${classes.button}`,\n      onClick: () => this.updatePublished(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }, \"UnPublish\") : /*#__PURE__*/React.createElement(Button, {\n      className: `${classes.publish} ${classes.button}`,\n      onClick: () => this.updatePublished(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    }, \"Publish\"), /*#__PURE__*/React.createElement(Button, {\n      className: `${classes.delete} ${classes.button}`,\n      onClick: this.deleteTutorial,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: `${classes.update} ${classes.button}`,\n      onClick: this.updateTutorial,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    }, \"Update\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, this.state.message)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    }, \"Please click on a Tutorial...\")));\n  }\n\n}\n\nexport default withStyles(styles)(Tutorial);","map":{"version":3,"sources":["/Users/mak/react-material-ui-examples-master/src/components/tutorial.component.js"],"names":["React","Component","TutorialDataService","styles","TextField","Button","withStyles","Tutorial","constructor","props","onChangeTitle","bind","onChangeDescription","getTutorial","updatePublished","updateTutorial","deleteTutorial","state","currentTutorial","id","title","description","published","message","componentDidMount","match","params","e","target","value","setState","prevState","get","then","response","data","console","log","catch","status","update","delete","history","push","render","classes","form","textField","buttonWrapper","publish","button"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nimport { styles } from \"../css-common\"\nimport { TextField, Button, withStyles } from \"@material-ui/core\";\n\nclass Tutorial extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeDescription = this.onChangeDescription.bind(this);\n        this.getTutorial = this.getTutorial.bind(this);\n        this.updatePublished = this.updatePublished.bind(this);\n        this.updateTutorial = this.updateTutorial.bind(this);\n        this.deleteTutorial = this.deleteTutorial.bind(this);\n\n        this.state = {\n            currentTutorial: {\n                id: null,\n                title: \"\",\n                description: \"\",\n                published: false\n            },\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getTutorial(this.props.match.params.id);\n    }\n\n    onChangeTitle(e) {\n        const title = e.target.value;\n\n        this.setState(function (prevState) {\n            return {\n                currentTutorial: {\n                    ...prevState.currentTutorial,\n                    title: title\n                }\n            };\n        });\n    }\n\n    onChangeDescription(e) {\n        const description = e.target.value;\n\n        this.setState(prevState => ({\n            currentTutorial: {\n                ...prevState.currentTutorial,\n                description: description\n            }\n        }));\n    }\n\n    getTutorial(id) {\n        TutorialDataService.get(id)\n            .then(response => {\n                this.setState({\n                    currentTutorial: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    updatePublished(status) {\n        var data = {\n            id: this.state.currentTutorial.id,\n            title: this.state.currentTutorial.title,\n            description: this.state.currentTutorial.description,\n            published: status\n        };\n\n        TutorialDataService.update(this.state.currentTutorial.id, data)\n            .then(response => {\n                this.setState(prevState => ({\n                    currentTutorial: {\n                        ...prevState.currentTutorial,\n                        published: status\n                    }\n                }));\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    updateTutorial() {\n        TutorialDataService.update(\n            this.state.currentTutorial.id,\n            this.state.currentTutorial\n        )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The tutorial was updated successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteTutorial() {\n        TutorialDataService.delete(this.state.currentTutorial.id)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push('/tutorials')\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { currentTutorial } = this.state;\n        const { classes } = this.props\n\n        return (\n            <div>\n                {currentTutorial ? (\n                    <div className={classes.form}>\n                        <h2>Tutorial</h2>\n                        <form>\n                            <div>\n                                <TextField\n                                    className={classes.textField}\n                                    label=\"Title\"\n                                    name=\"title\"\n                                    value={currentTutorial.title}\n                                    onChange={this.onChangeTitle}\n                                    required\n                                />\n                            </div>\n                            <div>\n                                <TextField\n                                    className={classes.textField}\n                                    label=\"Description\"\n                                    name=\"description\"\n                                    value={currentTutorial.description}\n                                    onChange={this.onChangeDescription}\n                                    required\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>\n                                    <strong>Status: </strong>\n                                </label>\n                                {currentTutorial.published ? \"Published\" : \"Pending\"}\n                            </div>\n                        </form>\n                        <div className={classes.buttonWrapper}>\n                            {currentTutorial.published ? (\n                                <Button\n                                    className={`${classes.publish} ${classes.button}`}\n                                    onClick={() => this.updatePublished(false)}\n                                >\n                                    UnPublish\n              </Button>\n                            ) : (\n                                    <Button\n                                        className={`${classes.publish} ${classes.button}`}\n                                        onClick={() => this.updatePublished(true)}\n                                    >\n                                        Publish\n              </Button>\n                                )}\n                            <Button\n                                className={`${classes.delete} ${classes.button}`}\n                                onClick={this.deleteTutorial}\n                            >\n                                Delete\n            </Button>\n\n                            <Button\n                                type=\"submit\"\n                                className={`${classes.update} ${classes.button}`}\n                                onClick={this.updateTutorial}\n                            >\n                                Update\n            </Button>\n                        </div>\n                        <p>{this.state.message}</p>\n                    </div>\n                ) : (\n                        <div>\n                            <br />\n                            <p>Please click on a Tutorial...</p>\n                        </div>\n                    )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Tutorial)"]},"metadata":{},"sourceType":"module"}